# Определение паролей находится ниже строки '##'

# Это файл определения паролей к библиотеке PCL 2.0
# для русского языка (кодировка 1251).
# Для использования другой кодировки вам необходимо
# сконвертировать его любой программой перекодировки
# а затем, видимо, исправить модификатор .c(0)

# определение словарей - только в том случае, если будут
# использоваться макросы $u или $w

#$w = "C:\\dict\\main.dic"    # надо экранировать '\'
#$u = "user.dic"

# Определение наборов символов
# Предопределенные наборы
# Вы даже можете их менять - упорядочивать, вставлять или удалять символы,
# но это не будет влиять на модификаторы .u и .l

# $a = [abcdefghijklmnopqrstuvwxyz]
# $A = [ABCDEFGHIJKLMNOPQRSTUVWXYZ]
# $1 = [0123456789]
# $! = [\{ \} : \" < > \? \[ \] ; ' , \. / ~ ! @ \# \$ % ^ & \* \( \) _ + ` - \= \\ |] #take care with \\

# Дополнительный набор (может быть что угодно, например псевдографика)

$o = []

# Буквы национального алфавита. Эти определения также задают модификаторы
# .l и .u для национальных символов, поэтому порядок букв должен
# быть одним и тем же

$i  = [абвгдежзийклмнопрстуфхцчшщъыьэюяё]	# в конце стоят буквы е с точками, могут неправильно 
$I  = [АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯЁ]	# отображаться, но RAR хочет их именно такими

# Вот здесь уже спецсимвол ? будет равен [$a $A $1 $! $i $I $o]

# Теперь идут определения модификаторов преобразований .c().
# Для каждого символа, входящего в ?, можно задать символ, в который
# он преобразуется при применении модификатора .c
# Здесь необходимо экранировать символы '"' и '\'. Всего может быть до 255
# таких преобразований.
# Для примера сделаны два преобразования:
# .c(0) - преобразование русских слов в английские и наоборот по клавиатуре.
# .c(1) - русских и английских букв в схожие по начертанию цифры

# ? =   "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789{}:"<>?[];',./~! @#$%^&*()_+`-= \|абвгдежзийклмнопрстуфхцчшщъыьэюяёАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬ ЭЮЯЁ"
 ?.c(0)="фисвуапршолдьтщзйкыегмцчняФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ0123456789ХЪЖЭБЮ,хъжэбю.Ё!\"№;%:?*()_+ё-=\\/f,dult;pbqrkvyjghcnea[wxio]sm'.z`F,DULT;PBQRKVYJGHCNEA{WXIO}SM\">Z~"

 ?.c(1)="abcdefghijk1mn0pqrstuvwxyzABCDEFGH1JKLMN0PQR5TUVWXYZOl234S6789{}:\"<>?[];',./~! @#$%^&*()_+`-= \|абвгдеж3ийклмн0прстуфхц4шщъыьэюяёАБ8ГДЕЖ3ИЙКЛМН0ПРСТУФХЦ4ШЩЪЫЬЭЮЯЁ"

# Здесь определяются дополнительные наборы символов
# Набор для вставки и замены при пермутационных скобках

# $p = []

# И гласные - нужны для некоторых модификаторов

$v = [aeiouyAEIOUYаеёиоуэюяАЕЁИОУЭЮЯ]	# опять буквы е с точкой, не трогайте их без надобности

#
##
# НИЖЕ НАЧИНАЕТСЯ Определение паролей
#
# Самое обычное описание - перебирает маленькие русские буквы
$i *

# Самое обычное описание - перебирает маленькие английские буквы
$a *

# Тоже самое, но перебор ведется по маленьким и большим
# английским буквам
# [$a $A] *

# Если пароль состоит только из цифр
# $1 *

# Простейщая атака по словарю (раскомментируйте определение $w 
# при опеределении словарей)
# $w

# Более сложная атака, преобразует первую букву каждого слова в
# большую
# $w.u(1)

# Еще одна, добавляем одну цифру после каждого слова
# $w $1

# Если вы помните начало пароля "MyPass", после которого
# шли 4 цифры
# MyPass $1 $1 $1 $1

# Если вы набирали пароль "MyPass1234", но, видимо, ошиблись
# и он не подходит.
# {MyPass1234}

